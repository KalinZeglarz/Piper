version: "3.7"
services:
  frontend:
    build:
      context: ../service/frontend
      target: ${TARGET}
      dockerfile: Dockerfile
    ports:
      - "8003:8080"
    volumes:
      - ../service/frontend/:/frontend/
    container_name: frontend
  intelligence-core-service:
    build:
      context: ../service/intelligence-core-service
      dockerfile: Dockerfile
    volumes:
      - models:/models
    container_name: intelligence-core-service
  model-builder:
    build:
      context: ../service/model-builder
      dockerfile: docker/${ARCHITECTURE}/Dockerfile
    volumes:
      - training-data:/model-builder/training-data
      - models:/model-builder/models
    ports:
    - "2121:2121"
    depends_on:
      - kafka
    container_name: model-builder
  home-service:
    build:
      context: ../service/home-service
      target: ${TARGET}
      dockerfile: Dockerfile
    volumes:
      - training-data:/training-data
    ports:
      - "8001:80"
    depends_on:
      - routines-db
      - kafka
      - model-builder
      - intelligence-core-service
    container_name: home-service
  routines-db:
    image: mongo:4.4.1
    ports:
      - "8002:27017"
    volumes:
      - routines-db:/data/db
    container_name: routines-db
  zookeeper:
    image: kymeric/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    container_name: zookeeper
  kafka:
    image: kymeric/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    container_name: kafka
volumes:
  routines-db:
  training-data:
  models:
